<?php
/**
 * @author    JaJuMa GmbH <info@jajuma.de>
 * @copyright Copyright (c) 2022-present JaJuMa GmbH <https://www.jajuma.de>. All rights reserved.
 * @license   http://opensource.org/licenses/mit-license.php MIT License
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsSolid;
use Jajuma\HyvaFaq\Block\Widgets\Faq;
use Magento\Framework\Escaper;

/** @var ViewModelRegistry $viewModels */
/** @var Faq $block */
/** @var Escaper $escaper */
/** @var HeroiconsSolid $heroicons */
$isEnabled = $block->isEnabled();
$isEnabledStructuredData = $block->getData('enable_structured_data');
$heroicons = $viewModels->require(HeroiconsSolid::class);

$questionGroups = $block->getConditions();
$isShowQuestionOnDesktop = $block->getData('is_show_question_on_desktop');
$displayQuestionGroupTitle = $block->getData('display_desktop_question_group_title');
$isShowQuestionOnMobile = $block->getData('is_show_question_on_mobile');
$displayMobileQuestionGroupTitle = $block->getData('display_mobile_question_group_title');
$keepOnlyOneQuestionOpen = $block->getData('keep_only_one_question_open');
$openCloseIcons = $block->getData('open_close_icons');
$identifyNumber = rand(100, 1000);
$questionIndex = 0;
$jsonLdArray = [];
$heroIconsData = $block->getHeroicons($openCloseIcons, $isShowQuestionOnDesktop);
$typeIcons = $heroIconsData['type'];
$icons = $heroIconsData['icons'];
// desktop
if ($isShowQuestionOnDesktop) {
    if ($displayQuestionGroupTitle) {
        $desktopHeaderStyle = 'md:block';
    } else {
        $desktopHeaderStyle = 'md:hidden';
    }
} else {
    $desktopHeaderStyle = 'md:block';
}
//mobile
if ($isShowQuestionOnMobile) {
    if ($displayMobileQuestionGroupTitle) {
        $mobileHeaderStyle = 'block';
    } else {
        $mobileHeaderStyle = 'hidden';
    }
} else {
    $mobileHeaderStyle = 'block';
}
?>

<?php if ($isEnabled && count($questionGroups)): ?>
    <style>
        .accordion-item-body-question,
        .accordion-widget > .accordion-item-body{
            display: none;
        }
        <?php foreach ($icons as $icon): ?>
            <?php $name = $icon['name']; ?>
            .accordion-item-header-<?= $escaper->escapeHtml($identifyNumber) ?><?= $escaper->escapeHtml($icon['class']) ?> .<?= $escaper->escapeHtml($typeIcons) ?>::after {
                content: url(data:image/svg+xml;base64,<?= base64_encode($heroicons->$name("w-6 h-6", 25, 25)) ?>);
            }
        <?php endforeach; ?>

        <?php if ($isShowQuestionOnDesktop): ?>
            .accordion-widget > .accordion-item-body{
                display: block;
            }
        <?php endif; ?>
        @media only screen and (max-width: 767px) {
            .accordion-widget > .accordion-item-body {
                display: <?= $escaper->escapeHtml($isShowQuestionOnMobile ? 'block' : 'none') ?>;
            }
        }
    </style>

    <?php foreach ($questionGroups as $groupId => $questionGroup): ?>
        <div class="accordion-widget accordion-item mb-5 border" id="question-groups-<?= $escaper->escapeHtml($groupId) ?>">
            <div class="accordion-item-header-<?= $escaper->escapeHtml($identifyNumber) ?> cursor-pointer px-8 py-4 pr-16 font-bold relative <?= $escaper->escapeHtml($mobileHeaderStyle.' '.$desktopHeaderStyle) ?>" data-index="<?= $escaper->escapeHtml($questionIndex);?>">
                <strong><?= $escaper->escapeHtml(__($questionGroup['group_name'])) ?></strong>
                <span class="icon transition-all duration-300 transform absolute right-8 top-4 <?= $escaper->escapeHtml($typeIcons) ?>">
                </span>
            </div>
            <div class="accordion-item-body overflow-hidden" style="background: #f5f4f1;" id="content-group-<?= $escaper->escapeHtml($groupId) ?>">
                <div class="accordion-item-body-content p-4 pb-0 overflow-hidden">
                    <?php foreach ($questionGroup['question_lists'] as $questionId => $question): ?>
                        <div class="accordion-widget-content accordion-item mb-4" id="question-detail-<?= $escaper->escapeHtml($questionId) ?>">
                            <div class="accordion-item-header-<?= $identifyNumber ?> cursor-pointer p-4 pr-11 font-bold relative bg-white accordion-item-header-question" data-index="<?= $escaper->escapeHtml($questionIndex);?>">
                                <span><?= $escaper->escapeHtml(__($question['question_title'])) ?></span>
                                <span class="icon transition-all duration-300 transform absolute right-4 top-4 <?= $escaper->escapeHtml($typeIcons) ?>">
                                </span>
                            </div>
                            <div class="accordion-item-body overflow-hidden bg-gray-100 accordion-item-body-question" id="content-question-<?= $escaper->escapeHtml($questionId) ?>">
                                <div class="accordion-item-body-content p-4">
                                    <?= /* @noEscape */ $block->processorAnswerContent($question['question_answer']) ?>
                                </div>
                            </div>
                        </div>
                        <?php $questionIndex++;
                        if ($isEnabledStructuredData) {
                            $jsonLdArray[] = '{
                                "@type": "Question",
                                "name": "' . strip_tags($question['question_title']) . '",
                                "acceptedAnswer": {
                                  "@type": "Answer",
                                  "text": "' . strip_tags($question['question_answer']) . '"
                                }
                            }';
                        }
                    endforeach; ?>
                </div>
            </div>
        </div>
        <?php $questionIndex++;
    endforeach; ?>

    <script>
        /* plain JS slideToggle https://github.com/ericbutler555/plain-js-slidetoggle */
        HTMLElement.prototype.slideToggle = function(duration, callback) {
            if (this.clientHeight === 0) {
                _s(this, duration, callback, true);
            } else {
                _s(this, duration, callback);
            }
        };

        HTMLElement.prototype.slideUp = function(duration, callback) {
            _s(this, duration, callback);
        };

        HTMLElement.prototype.slideDown = function (duration, callback) {
            _s(this, duration, callback, true);
        };

        function _s(el, duration, callback, isDown) {
            if (typeof duration === 'undefined') duration = 400;
            if (typeof isDown === 'undefined') isDown = false;

            el.style.overflow = "hidden";
            if (isDown) el.style.display = "block";

            var elStyles        = window.getComputedStyle(el);

            var elHeight        = parseFloat(elStyles.getPropertyValue('height'));
            var elPaddingTop    = parseFloat(elStyles.getPropertyValue('padding-top'));
            var elPaddingBottom = parseFloat(elStyles.getPropertyValue('padding-bottom'));
            var elMarginTop     = parseFloat(elStyles.getPropertyValue('margin-top'));
            var elMarginBottom  = parseFloat(elStyles.getPropertyValue('margin-bottom'));

            var stepHeight        = elHeight        / duration;
            var stepPaddingTop    = elPaddingTop    / duration;
            var stepPaddingBottom = elPaddingBottom / duration;
            var stepMarginTop     = elMarginTop     / duration;
            var stepMarginBottom  = elMarginBottom  / duration;

            var start;

            function step(timestamp) {
                if (start === undefined) start = timestamp;
                var elapsed = timestamp - start;
                if (isDown) {
                    el.style.height        = (stepHeight        * elapsed) + "px";
                    el.style.paddingTop    = (stepPaddingTop    * elapsed) + "px";
                    el.style.paddingBottom = (stepPaddingBottom * elapsed) + "px";
                    el.style.marginTop     = (stepMarginTop     * elapsed) + "px";
                    el.style.marginBottom  = (stepMarginBottom  * elapsed) + "px";
                } else {
                    el.style.height        = elHeight        - (stepHeight        * elapsed) + "px";
                    el.style.paddingTop    = elPaddingTop    - (stepPaddingTop    * elapsed) + "px";
                    el.style.paddingBottom = elPaddingBottom - (stepPaddingBottom * elapsed) + "px";
                    el.style.marginTop     = elMarginTop     - (stepMarginTop     * elapsed) + "px";
                    el.style.marginBottom  = elMarginBottom  - (stepMarginBottom  * elapsed) + "px";
                }

                if (elapsed >= duration) {
                    el.style.height        = "";
                    el.style.paddingTop    = "";
                    el.style.paddingBottom = "";
                    el.style.marginTop     = "";
                    el.style.marginBottom  = "";
                    el.style.overflow      = "";
                    if (!isDown) el.style.display = "none";
                    if (typeof callback === 'function') callback();
                } else {
                  window.requestAnimationFrame(step);
                }
            }
            window.requestAnimationFrame(step);
        }

        window.addEventListener('init-external-scripts', () => {
            document.querySelectorAll(".accordion-item-header-<?= $identifyNumber ?>").forEach(accordionItemHeader => {
                if(!accordionItemHeader.classList.contains("accordion-item-header-question")) {
                    if  (window.innerWidth < 768) {
                        <?php if ($isShowQuestionOnMobile): ?>
                        accordionItemHeader.classList.add("active");
                        <?php if ($openCloseIcons == 1):?>
                        var icon = accordionItemHeader.querySelector('.icon');
                        icon.classList.toggle('rotate-180');
                        <?php endif;?>
                        <?php endif; ?>
                    } else {
                        <?php if ($isShowQuestionOnDesktop): ?>
                        accordionItemHeader.classList.add("active");
                        <?php if ($openCloseIcons == 1):?>
                        var icon = accordionItemHeader.querySelector('.icon');
                        icon.classList.toggle('rotate-180');
                        <?php endif;?>
                        <?php endif; ?>
                    }
                }

                accordionItemHeader.addEventListener("click", event => {
                    var headerQuestionIndex = accordionItemHeader.getAttribute('data-index');
                    <?php if ($keepOnlyOneQuestionOpen):?>
                    if(accordionItemHeader.classList.contains("accordion-item-header-question")) {
                        document.querySelectorAll(".accordion-widget-content .accordion-item-header-<?= $identifyNumber ?>").forEach(item => {
                            if(item.getAttribute('data-index') != headerQuestionIndex){
                                item.classList.remove('active');
                                var icon = item.querySelector('.icon');
                                icon.classList.remove('rotate-180');
                                const accordionItemBody = item.nextElementSibling;
                                accordionItemBody.slideUp(300);
                            }
                        });
                    }
                    <?php endif;?>

                    accordionItemHeader.classList.toggle("active");
                    <?php if ($openCloseIcons == 1):?>
                    var icon = accordionItemHeader.querySelector('.icon');
                    icon.classList.toggle('rotate-180');
                    <?php endif;?>
                    const accordionItemBody = accordionItemHeader.nextElementSibling;
                    accordionItemBody.slideToggle(300);
                });
            });
        }, {once: true, passive: true});

    </script>

    <?php if ($isEnabledStructuredData):
        if (count($jsonLdArray) > 0):?>
            <script type="application/ld+json">
            {
              "@context": "https://schema.org",
              "@type": "FAQPage",
              "mainEntity": [<?= implode(',', $jsonLdArray); ?>]
            }
            </script>
    <?php endif;
    endif;?>
<?php endif; ?>
